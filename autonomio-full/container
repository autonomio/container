#!/bin/bash

MODE=$1

stop(){

	ID=$(docker ps -a | sed '1d' | head -1 | tr -s ' ' | cut -d ' ' -f1)
	docker stop $ID > current.id

}

new(){

	#!/bin/bash
	echo -e "\n"
	echo -e "+------------------------------------+"
	echo -e "| Autonomio - Augmented Intelligence |"
	echo -e "+------------------------------------+"
	echo -e ""
	echo -e "Please wait while your container is prepared..."
	echo -e ""
	echo -e "You'll be ready to science in just a few secs. "
	echo -e "\n"

	ID=$(docker images | head -2 | tail -1 | tr -s ' ' | cut -d ' ' -f3)

	VAR=$(docker run -d -p 4141:80 -p 4140:8123 $ID)

	echo -e "SUCCESS 1/4: your container is running."
	echo -e "\n"

	docker exec -i -t $VAR service apache2 start >/dev/null
	docker ps -a | head -2 | tail -1 | cut -d ' ' -f1 > current.id

	echo -e "\n"
	echo -e "SUCCESS 2/4: you've entered the container"
	echo -e "\n"

	echo -e "SUCCESS 3/4: starting backend"
	echo -e "\n"
	echo -e "SUCCESS 4/4: Your container is running...access http://localhost:4141"
	echo -e "\n"
	echo -e "+------------------------------------------+"
	echo -e "| THE 10 SECOND BRIEFING (kinda important) |"
	echo -e "+------------------------------------------+"
	echo -e "\n"
	echo -e " 1) go to http://localhost:4141 in your browser "
	echo -e " 2) upload data in the first step"
	echo -e " 3) configure your model and run experiment"
	echo -e "\n"
	echo -e " NOTE:you have access to both GUI and Notebook"
	echo -e "\n"
	echo -e " Hit ENTER to return to your own shell."
	echo -e "\n"
	exit
}

start(){

	ID=$(cat current.id)
	docker start $ID > current.id
	docker exec -i -t $ID service apache2 start >/dev/null
	docker exec -i -t $ID  jupyter notebook --ip "0.0.0.0" --port=8123 --no-browser --NotebookApp.token= --allow-root

}

destroy(){

	ID=$(cat current.id)
	docker stop $ID
	docker rm $ID
}

shell(){

	ID=$(cat current.id)
	docker exec -i -t $ID /bin/bash
}

restart(){

	stop
	start
}

if [ "$MODE" == "new" ]; then
	new

elif [ "$MODE" == "start" ]; then
	start

elif [ "$MODE" == "stop" ]; then
	stop

elif [ "$MODE" == "restart" ]; then
	restart

elif [ "$MODE" == "shell" ]; then
	shell

elif [ "$MODE" == "destroy" ]; then
	destroy

else

	echo -e "\n USE:"
	echo -e "       $ ./container <arg>"
	echo -e ""
	echo -e "\n ARGS:"
	echo -e "       'new','start','stop','destory"
	echo -e "       'restart','hell'\n"
fi